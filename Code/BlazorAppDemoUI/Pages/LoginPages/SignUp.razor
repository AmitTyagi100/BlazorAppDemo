@page  "/signup"
@using BlazorAppDemo.Data
@using BlazorAppDemo.ApiConnect
@using SendGrid
@using SendGrid.Helpers.Mail

@using CrossCuttingEntities
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Logging;
@inject ILogger<SignUp> logger;
@inject IConfiguration Configuration

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IUserData userService

<EditForm Model="@user" OnValidSubmit="@RegisterUser">
	<div>
		<br /><br /><br /><br /><br />
	</div>
	<div>
		<h3 style="font-weight:bold; color:purple">Register</h3>
	</div>
	<div>
		<br />
	</div>
	<div class="col-12 row">
		<input class="form-control col-12" @bind="user.EmailAddress" placeholder="email address" />
	</div>
	<br />
	<div class="col-12 row">
		<input type="password" class="form-control col-12" @bind="user.Password" placeholder="password" />
	</div>
	<br />
	<div class="col-12 row">
		<input type="password" class="form-control col-12" @bind="user.ConfirmPassword" placeholder="confirm password" />
	</div>
	<br />
	<div class="col-12 row">
		<input class="form-control col-12" @bind="user.User_Info.FirstName" placeholder="First Name" />
	</div>
	<br />
	<div class="col-12 row">
		<input class="form-control col-12" @bind="user.User_Info.LastName" placeholder="Last Name" />
	</div>
	<br />

	<p> Department will be assigned after SignUp </p>
	<br />
	<div class="col-12 row">
		<span class="col-12"></span>
		<input type="submit" class="form-control col-6 btn btn-primary" value="Sign up" />
		<a href="/" class="col-6">Already an user?</a>
	</div>
	<br />
	<div class="col-12 row" style="text-align:left; font-weight:bold">
		<span class="col-12">@LoginMesssage</span>
	</div>
</EditForm>

@code { private User user;



	public string LoginMesssage { get; set; }

	protected override Task OnInitializedAsync()
	{
		user = new User();


		return base.OnInitializedAsync();
	}

	private async Task<bool> RegisterUser()
	{
		//assume that user is valid
		//user.Source = "APPC";
		if (user.Password == user.ConfirmPassword)
		{
			var returnedUser = await userService.RegisterUserAsync(user);

			if (returnedUser.EmailAddress != null)
			{
				((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(returnedUser);
				SendRegistrationMail(returnedUser.EmailAddress);
				NavigationManager.NavigateTo("/");
			}
			else
			{
				LoginMesssage = "Invalid username or password";
			}
		}
		else
		{
			LoginMesssage = "Both Passwords are not same!";
		}

		return await Task.FromResult(true);
	}


	private async Task SendRegistrationMail(string email)
	{

		try
		{

			var apiKey = Configuration["SendGridAPIKey"];
			var client = new SendGridClient(apiKey);
			var msg = new SendGridMessage()
			{
				From = new EmailAddress("NoReply@BlazorDemoTeam.com", "Blazor Demo"),
				Subject = "Blazor Demo Team",
				PlainTextContent = "Hello, Email!",
				HtmlContent = ("<!DOCTYPE html> <html> <head> <title></title> <meta http-equiv='Content-Type' content='text/html; charset=utf-8' /> <meta name='viewport' content='width=device-width, initial-scale=1'> <meta http-equiv='X-UA-Compatible' content='IE=edge' /> <style type='text/css'> @media screen { @font-face { 	font-family: 'Lato'; 	font-style: normal; 	font-weight: 400; 	src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v11/qIIYRU-oROkIk8vfvxw6QvesZW2xOQ-xsNqO47m55DA.woff) format('woff'); } @font-face { 	font-family: 'Lato'; 	font-style: normal; 	font-weight: 700; 	src: local('Lato Bold'), local('Lato-Bold'), url(https://fonts.gstatic.com/s/lato/v11/qdgUG4U09HnJwhYI-uK18wLUuEpTyoUstqEm5AMlJo4.woff) format('woff'); } @font-face { 	font-family: 'Lato'; 	font-style: italic; 	font-weight: 400; 	src: local('Lato Italic'), local('Lato-Italic'), url(https://fonts.gstatic.com/s/lato/v11/RYyZNoeFgb0l7W3Vu1aSWOvvDin1pK8aKteLpeZ5c0A.woff) format('woff'); } @font-face { 	font-family: 'Lato'; 	font-style: italic; 	font-weight: 700; 	src: local('Lato Bold Italic'), local('Lato-BoldItalic'), url(https://fonts.gstatic.com/s/lato/v11/HkF_qI1x_noxlxhrhMQYELO3LdcAZYWl9Si6vvxL-qU.woff) format('woff'); } } /* CLIENT-SPECIFIC STYLES */ body, table, td, a { -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; } table, td { mso-table-lspace: 0pt; mso-table-rspace: 0pt; } img { -ms-interpolation-mode: bicubic; } /* RESET STYLES */ img { border: 0; height: auto; line-height: 100%; outline: none; text-decoration: none; } table { border-collapse: collapse !important; } body { height: 100% !important; margin: 0 !important; padding: 0 !important; width: 100% !important; } /* iOS BLUE LINKS */ a[x-apple-data-detectors] { color: inherit !important; text-decoration: none !important; font-size: inherit !important; font-family: inherit !important; font-weight: inherit !important; line-height: inherit !important; } /* MOBILE STYLES */ @media screen and (max-width:600px) { h1 { 	font-size: 32px !important; 	line-height: 32px !important; } } /* ANDROID CENTER FIX */ div[style*='margin: 16px 0;'] { margin: 0 !important; } </style> </head> <body style='background-color: #f4f4f4; margin: 0 !important; padding: 0 !important;'> <!-- HIDDEN PREHEADER TEXT --> <div style='display: none; font-size: 1px; color: #fefefe; line-height: 1px; font-family: 'Lato', Helvetica, Arial, sans-serif; max-height: 0px; max-width: 0px; opacity: 0; overflow: hidden;'> We're thrilled to have you here! Get ready to dive into your new account. </div> <table border='0' cellpadding='0' cellspacing='0' width='100%'> <!-- LOGO --> <tr> <td bgcolor='#FFA73B' align='center'> 	<table border='0' cellpadding='0' cellspacing='0' width='100%' style='max-width: 600px;'> <tr> <td align='center' valign='top' style='padding: 40px 10px 40px 10px;'> </td> </tr> 	</table> </td> </tr> <tr> <td bgcolor='#FFA73B' align='center' style='padding: 0px 10px 0px 10px;'> 	<table border='0' cellpadding='0' cellspacing='0' width='100%' style='max-width: 600px;'> <tr> <td bgcolor='#ffffff' align='center' valign='top' style='padding: 40px 20px 20px 20px; border-radius: 4px 4px 0px 0px; color: #111111; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 48px; font-weight: 400; letter-spacing: 4px; line-height: 48px;'> <h1 style='font-size: 48px; font-weight: 400; margin: 2;'>Welcome!</h1> <img src=' https://img.icons8.com/clouds/100/000000/handshake.png' width='125' height='120' style='display: block; border: 0px;' /> </td> </tr> 	</table> </td> </tr> <tr> <td bgcolor='#f4f4f4' align='center' style='padding: 0px 10px 0px 10px;'> 	<table border='0' cellpadding='0' cellspacing='0' width='100%' style='max-width: 600px;'> <tr> <td bgcolor='#ffffff' align='left' style='padding: 20px 30px 40px 30px; color: #666666; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400; line-height: 25px;'> <p style='margin: 0;'>We're excited to have you get started. </p> </td> </tr>   <tr> <td bgcolor='#ffffff' align='left' style='padding: 0px 30px 20px 30px; color: #666666; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400; line-height: 25px;'> <p style='margin: 0;'>If you have any questions, just reply to this email—we're always happy to help out.</p> </td> </tr> <tr> <td bgcolor='#ffffff' align='left' style='padding: 0px 30px 40px 30px; border-radius: 0px 0px 4px 4px; color: #666666; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400; line-height: 25px;'> <p style='margin: 0;'>Cheers,<br>Blazor Demo Team</p> </td> </tr> 	</table> </td> </tr> <tr> <td bgcolor='#f4f4f4' align='center' style='padding: 30px 10px 0px 10px;'> 	<table border='0' cellpadding='0' cellspacing='0' width='100%' style='max-width: 600px;'> <tr> <td bgcolor='#FFECD1' align='center' style='padding: 30px 30px 30px 30px; border-radius: 4px 4px 4px 4px; color: #666666; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400; line-height: 25px;'> <h2 style='font-size: 20px; font-weight: 400; color: #111111; margin: 0;'>Need more help?</h2> <p style='margin: 0;'><a href='#' target='_blank' style='color: #FFA73B;'>We&rsquo;re here to help you out</a></p> </td> </tr> 	</table> </td> </tr> <tr> <td bgcolor='#f4f4f4' align='center' style='padding: 0px 10px 0px 10px;'> 	<table border='0' cellpadding='0' cellspacing='0' width='100%' style='max-width: 600px;'> <tr> <td bgcolor='#f4f4f4' align='left' style='padding: 0px 30px 30px 30px; color: #666666; font-family: 'Lato', Helvetica, Arial, sans-serif; font-size: 14px; font-weight: 400; line-height: 18px;'> <br> <p style='margin: 0;'>If these emails get annoying, please feel free to <a href='#' target='_blank' style='color: #111111; font-weight: 700;'>unsubscribe</a>.</p> </td> </tr> 	</table> </td> </tr> </table> </body> </html>")
			};
			msg.AddTo(new EmailAddress(email));

			var response = await client.SendEmailAsync(msg);
			if (response.StatusCode != System.Net.HttpStatusCode.OK)
			{
				logger.LogError(string.Format("Error in send mail function From SendGrid, Error Details : {0} ", response.StatusCode));
			}
		}
		catch (Exception ex)
		{
			logger.LogError(string.Format("Error in send mail function, Error Details : {0} ", ex.ToString()));

		}
	}

}